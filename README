***---This is not so stub readme file. But it looks more like notes to future selfs---***

Dear future me, since the project have started to become more complicated, a certain convention uprose.

State structures are accesed via pointers stored in main app structure.

Each game state must have constructor, destructor, and switcher functions. 
Constructor allocates space for state struct (obviously) and also links main app and newly created state with each other via pointers (that seems redundand, though).
Destructor frees all memory owned by the state and assigns NULL to pointer to that state inside the main app.
Swither simply reassigns all five loop processing functions to functions corresponded to current state. Useful for states like 'Pause'. 

All static and private functions may have any number and type of arguments, but main flow processing functions must follow convention as described below:

struct vtable_State{
    void (* Init)(SApp *);
    void (* Loop)(SApp *);
    void (* Event)(SApp *, SDL_Event *);
    void (* Render)(SApp *);
    void (* Cleanup)(SApp *);
};

And make all is your friend.